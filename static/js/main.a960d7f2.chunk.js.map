{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["localDataLength","parseInt","localStorage","getItem","localSec","localColor","localBg","d","Array","fill","map","_","i","x","y","Math","random","App","useState","show","setShow","length","setLength","dataLength","setDataLength","sec","setSec","color","setColor","bg","setBg","ref","useRef","useEffect","current","getTotalLength","setItem","className","onKeyDown","e","key","tabIndex","width","height","viewBox","style","backgroundColor","strokeDasharray","strokeDashoffset","animation","animationDelay","strokeWidth","stroke","type","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGMA,EAAkBC,SAASC,aAAaC,QAAQ,gBAAkB,GAClEC,EAAWH,SAASC,aAAaC,QAAQ,SAAW,EACpDE,EAAaH,aAAaC,QAAQ,UAAY,UAC9CG,EAAUJ,aAAaC,QAAQ,OAAS,UASxCI,EALO,IAAIC,MAAMR,GAAiBS,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAC7DC,EAAa,GAATD,EAAI,GACRE,GAAIF,EAAI,IAAM,EAAI,GAAS,EAAJA,EAAQ,EAAQ,EAAJA,OAJA,GAAhBG,KAAKC,UAAiB,OAO5BN,KAAI,gBAAGG,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,kBAAmBD,EAAnB,YAAwBC,MA0F5BG,EAxFH,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACTC,EADS,KACHC,EADG,OAEYF,mBAAS,KAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGoBJ,mBAASlB,GAH7B,mBAGTuB,EAHS,KAGGC,EAHH,OAIMN,mBAASd,GAJf,mBAITqB,EAJS,KAIJC,EAJI,OAKUR,mBAASb,GALnB,mBAKTsB,EALS,KAKFC,EALE,OAMIV,mBAASZ,GANb,mBAMTuB,EANS,KAMLC,EANK,KAOVC,EAAMC,iBAAO,MAEnBC,qBAAU,WACRX,EAAUS,EAAIG,QAAQC,oBACrB,IAEHF,qBAAU,WACR/B,aAAakC,QAAQ,aAAcb,GACnCrB,aAAakC,QAAQ,MAAOX,GAC5BvB,aAAakC,QAAQ,QAAST,GAC9BzB,aAAakC,QAAQ,KAAMP,KAC1B,CAACN,EAAYE,EAAKE,EAAOE,IAO5B,OACE,sBAAKQ,UAAU,MAAMC,UANJ,SAACC,GACJ,UAAVA,EAAEC,KACJpB,GAASD,IAIiCsB,SAAS,IAArD,UACE,qBACEC,MAAM,MACNC,OAAO,MACPC,QAAQ,cACRC,MAAO,CAAEC,gBAAiBjB,GAJ5B,SAME,sBACEE,IAAKA,EACLM,UAAU,OACVQ,MAAO,CACLE,gBAAiB1B,EACjB2B,iBAAkB3B,EAClB4B,UAAU,QAAD,OAAUxB,EAAV,qBACTyB,eAAgB,MAElBzC,KAAK,OACL0C,YAAY,IACZC,OAAQzB,EACRpB,EAAC,gBAAWA,OAGfY,GACC,sBAAKkB,UAAU,SAAf,UACE,4CAEE,uBACEgB,KAAK,SACLC,MAAO7B,EACP8B,SAAU,SAAChB,GAAD,OAAOb,EAAOa,EAAEiB,OAAOF,aAGrC,+CAEE,uBACED,KAAK,SACLC,MAAO/B,EACPgC,SAAU,SAAChB,GAAD,OAAOf,EAAce,EAAEiB,OAAOF,aAG5C,yCAEE,uBACED,KAAK,QACLC,MAAO3B,EACP4B,SAAU,SAAChB,GAAD,OAAOX,EAASW,EAAEiB,OAAOF,aAGvC,oDAEE,uBACED,KAAK,QACLC,MAAOzB,EACP0B,SAAU,SAAChB,GAAD,OAAOT,EAAMS,EAAEiB,OAAOF,oBCpF/BG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a960d7f2.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nconst localDataLength = parseInt(localStorage.getItem(\"dataLength\")) || 21;\nconst localSec = parseInt(localStorage.getItem(\"sec\")) || 5;\nconst localColor = localStorage.getItem(\"color\") || \"#000000\";\nconst localBg = localStorage.getItem(\"bg\") || \"#ffffff\";\n\nconst ran = () => ~~(Math.random() * 10) - 5;\n\nconst data = new Array(localDataLength).fill(0).map((_, i) => ({\n  x: (i + 1) * 5,\n  y: (i % 2 === 0 ? 10 + i * 4 : 5 + i * 4) + ran(),\n}));\n\nconst d = data.map(({ x, y }) => `L ${x} ${y}`);\n\nconst App = () => {\n  const [show, setShow] = useState(false);\n  const [length, setLength] = useState(1000);\n  const [dataLength, setDataLength] = useState(localDataLength);\n  const [sec, setSec] = useState(localSec);\n  const [color, setColor] = useState(localColor);\n  const [bg, setBg] = useState(localBg);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    setLength(ref.current.getTotalLength());\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"dataLength\", dataLength);\n    localStorage.setItem(\"sec\", sec);\n    localStorage.setItem(\"color\", color);\n    localStorage.setItem(\"bg\", bg);\n  }, [dataLength, sec, color, bg]);\n\n  const toggleShow = (e) => {\n    if (e.key === \"Enter\") {\n      setShow(!show);\n    }\n  };\n  return (\n    <div className=\"App\" onKeyDown={toggleShow} tabIndex=\"0\">\n      <svg\n        width=\"90%\"\n        height=\"700\"\n        viewBox=\"0 1 100 100\"\n        style={{ backgroundColor: bg }}\n      >\n        <path\n          ref={ref}\n          className=\"path\"\n          style={{\n            strokeDasharray: length,\n            strokeDashoffset: length,\n            animation: `dash ${sec}s linear forwards`,\n            animationDelay: \"1s\",\n          }}\n          fill=\"none\"\n          strokeWidth=\"1\"\n          stroke={color}\n          d={`M 0 0 ${d}`}\n        />\n      </svg>\n      {show && (\n        <div className=\"config\">\n          <div>\n            Duration:\n            <input\n              type=\"number\"\n              value={sec}\n              onChange={(e) => setSec(e.target.value)}\n            />\n          </div>\n          <div>\n            Data points:\n            <input\n              type=\"number\"\n              value={dataLength}\n              onChange={(e) => setDataLength(e.target.value)}\n            />\n          </div>\n          <div>\n            Color:\n            <input\n              type=\"color\"\n              value={color}\n              onChange={(e) => setColor(e.target.value)}\n            />\n          </div>\n          <div>\n            Background color:\n            <input\n              type=\"color\"\n              value={bg}\n              onChange={(e) => setBg(e.target.value)}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}